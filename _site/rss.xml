<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Joe Kampschmidt&#39;s Code</title>
		<description>a pragmatic approach to web and software development</description>
		<link>http://www.jokecamp.com</link>
		<atom:link href="http://www.jokecamp.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Remote Work</title>
				<description>&lt;h2&gt;Remote Work&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;http://www.nytimes.com/2015/01/20/business/co-working-on-vacation-a-desk-in-paradise.html?_r=0&lt;/li&gt;
&lt;li&gt;http://coworking.camp/&lt;/li&gt;
&lt;li&gt;http://jobs.remotive.io/&lt;/li&gt;
&lt;li&gt;http://nomadforum.io/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have just started working from home.&lt;/p&gt;

&lt;p&gt;I am a software developer. I have a Macbook Pro but do a lot of Windows C# development.&lt;/p&gt;

&lt;p&gt;Tools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;citrix any connection&lt;/li&gt;
&lt;li&gt;phone for auth&lt;/li&gt;
&lt;li&gt;Internet connection (from 3 mbsp to 25 mbps)&lt;/li&gt;
&lt;li&gt;working space, table and chair and some office supplies&lt;/li&gt;
&lt;li&gt;skype&lt;/li&gt;
&lt;li&gt;slack&lt;/li&gt;
&lt;li&gt;Avaya soft client for work phone extensions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My wife is a travel nurse on her first assignment. We have been bouncing around and have been a little unsettled. We have stored belonging in my parents house in Ohio, our cat is staying with my wife&amp;#39;s brother in Baltimore and we are living in a temporary apartment in Mass until we move to Boston for my wife&amp;#39;s first twelve week assignment.&lt;/p&gt;

&lt;p&gt;Remapping the shortcut keys for remote desktop! just do it or you will get so frustrated all the time. see http://superuser.com/questions/263647/how-would-i-remap-mac-cmd-to-ctrl-keys-in-remote-desktop-connection-for-mac-appl&lt;/p&gt;

&lt;p&gt;Using the ipad as an extra screen?&lt;/p&gt;

&lt;p&gt;Star Trek - You can instantanesouly be beamed into a meeting without even realizing (with Skype) if you forget about a meeting. Be ready. be presentable.&lt;/p&gt;

&lt;p&gt;I cannot always see everyone who is sitting at the conference table due to the angle of the camera.&lt;/p&gt;

&lt;p&gt;Added internal certificates to my osx keychain.&lt;/p&gt;
</description>
				<pubDate>Mon, 01 Feb 2016 16:28:19 -0700</pubDate>
				<link>http://www.jokecamp.com/blog/remote-work</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/remote-work</guid>
			</item>
		
			<item>
				<title>Getting started with openfootball data</title>
				<description>&lt;p&gt;mkdir openfootball
cd openfootball&lt;/p&gt;

&lt;p&gt;1) Pick a data set repository. We will use &lt;a href=&quot;https://github.com/openfootball/eng-england&quot;&gt;https://github.com/openfootball/eng-england&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) install sportdb&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install sportdb&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ gem list sportdb

*** LOCAL GEMS ***

sportdb (1.11.0)
sportdb-models (1.14.0)
sportdb-service (0.4.0)
sportdb-update (0.1.1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is &lt;a href=&quot;http://guides.rubygems.org/what-is-a-gem/&quot;&gt;ruby gem&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;sportdb new en&lt;/p&gt;

&lt;h1&gt;Understanding the OpenFootball Text Format (Mini Language)&lt;/h1&gt;

&lt;p&gt;https://github.com/sportdb/sport.db.models/blob/b3245d858fb89757eb8e91e1da8ccacd001db9c0/lib/sportdb/readers/game.rb&lt;/p&gt;

&lt;p&gt;Event Keys:
  league
  season
  start&lt;em&gt;at / begin&lt;/em&gt;at (%Y-%m-%d) date
  end&lt;em&gt;at / stop&lt;/em&gt;at date
  grounds, stadiums, venues array
  teams array
  fixtures / sources&lt;/p&gt;

&lt;p&gt;Goals format
  [Neymar 12&amp;#39;]&lt;/p&gt;

&lt;p&gt;https://github.com/sportdb/sport.db.models/blob/b3245d858fb89757eb8e91e1da8ccacd001db9c0/lib/sportdb/readers/game.rb&lt;/p&gt;
</description>
				<pubDate>Mon, 19 Oct 2015 18:32:42 -0600</pubDate>
				<link>http://www.jokecamp.com/blog/2015-10-06-getting-started-with-openfootball-data</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/2015-10-06-getting-started-with-openfootball-data</guid>
			</item>
		
			<item>
				<title>Tutorial for Passport.js authentication in a Node.js Express application</title>
				<description>&lt;h3&gt;Who&amp;#39;s this targeted for?&lt;/h3&gt;

&lt;p&gt;This tutorial is geared towards developers just getting started with &lt;a href=&quot;http://passportjs.org/&quot;&gt;passport.js&lt;/a&gt; and expects a basic understanding of &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; (v 4.2.1) and &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; (v 4.13.3) web framework. I will show a bare minimum amount code needed for a working demo and will be cutting corners when it comes to best practices. We will create an application that will allow you to login with GitHub.&lt;/p&gt;

&lt;h3&gt;Stack Overview&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;passport.js&lt;/strong&gt; - is a flexible and modular authentication middleware for Node.js. It can be dropped into any Express-based web application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;passport strategies&lt;/strong&gt; - are different authentication mechanisms such as twitter, Facebook, GitHub, local (credentials) and etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;middleware&lt;/strong&gt; - are functions that handle requests, responses and the next middleware in the cycle. Usually with the signature &lt;code&gt;func(req, res, next)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OAuth&lt;/strong&gt; - an open standard for authorization. OAuth provides client applications a secure delegated access to server resources on behalf of a resource owner. &lt;a href=&quot;https://en.wikipedia.org/wiki/OAuth&quot;&gt;OAuth on wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;express.js&lt;/strong&gt; - a fast minimalist web framework for Node.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;start&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;1) &lt;a href=&quot;#start&quot;&gt;Setup a simple Express.js app&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For this tutorial I will use the port &lt;code&gt;30000&lt;/code&gt;. This is important because when we register our developer applications at various OAuth provider websites we will have to specify the port number in our callback url in order to test on with &lt;a href=&quot;http://localhost:30000&quot;&gt;http://localhost:30000&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new project directory and setup the packages.json file with &lt;code&gt;npm init&lt;/code&gt;. Use defaults except for server.js as the entry point.&lt;/li&gt;
&lt;li&gt;Install and save the following node dependencies:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install express --save
npm install express-session --save
npm install passport --save
npm install passport-github --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Create the file &lt;code&gt;server.js&lt;/code&gt; and copy in the code below for a basic application with one route that outputs a menu. We are just going to concatenate HTML on the fly because we are lazy.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// main menu route&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;ul&amp;gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#39;/auth/github&amp;#39;&amp;gt;GitHub&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#39;/logout&amp;#39;&amp;gt;logout&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;  &amp;lt;/ul&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Example app listening at http://%s:%s&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Test the application by running &lt;code&gt;node sever.js&lt;/code&gt; and viewing &lt;a href=&quot;http://localhost:30000/&quot;&gt;http://localhost:30000/&lt;/a&gt;. It should output a simple menu with broken (stub) links.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;logout&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;2) &lt;a href=&quot;#logout&quot;&gt;Logout Route&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The logout route will be very useful for testing so we will create it first.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the following passport reference to the top declarations;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;passport&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add the following route code (below the existing route) shown below. The key line is &lt;code&gt;req.logout();&lt;/code&gt;. It is a method that passport attaches to every request. The logout route will be unprotected. No error will be thrown if an un-authenticated user hits this route.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/logout&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;logging out&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now test the app and you will see that clicking on logout redirects you to the main menu on each click.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;register&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;3) &lt;a href=&quot;#register&quot;&gt;Register a new developer application with GitHub&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Register a new GitHub dev application at &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The most important property to set is the &lt;strong&gt;Authorization callback URL&lt;/strong&gt;. Use &lt;code&gt;http://localhost:30000/auth/github/callback&lt;/code&gt;. GitHub allows for localhost address. Be warned that not all oauth providers will allow you to test using localhost.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See my example application settings in the image below
&lt;img src=&quot;http://www.jokecamp.com/public/github-application.png&quot; title=&quot;GitHub Application Registration&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make note of your new &amp;quot;Client ID&amp;quot; and &amp;quot;Client Secret&amp;quot; properties provided by GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;github&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;4) &lt;a href=&quot;#github&quot;&gt;OAuth and passport-github strategy implementation&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We should have already added the &lt;a href=&quot;https://github.com/jaredhanson/passport-github&quot;&gt;passport-github package&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now add the following just below the declarations. Be sure to insert your client id and secret as shown on your newly created GitHub application. You should not need to change the callbackURL. Just make sure it matches what you provided to GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GithubStrategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;passport-github&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Strategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GithubStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clientID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-- ENTER YOUR GITHUB CLIENT ID --&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clientSecret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-- ENTER YOUR GITHUB CLIENT SECRET --&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callbackURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:30000/auth/github/callback&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;accessToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;refreshToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add the session and user management code. See the &lt;a href=&quot;https://github.com/jaredhanson/passport#sessions&quot;&gt;passport.js documentation on sessions and users&lt;/a&gt; to understand how it works. The &lt;code&gt;serializeUser&lt;/code&gt; and &lt;code&gt;deserializeUser&lt;/code&gt; functions are required. For now we will just pass the entire &lt;code&gt;user&lt;/code&gt; object along. In a proper implementation we would perform specific business logic and proper saving/retrieval. The session secret can be anything for this tutorial.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Express and Passport Session&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;express-session&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-- ENTER CUSTOM SESSION SECRET --&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// placeholder for custom user serialization&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// null is for errors&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deserializeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// placeholder for custom user deserialization.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// maybe you are going to get the user from mongo by id?&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// null is for errors&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add the following two routes for the GitHub OAuth flow. The first one starts the OAuth workflow and the second is the URL GitHub will redirect to when finished.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// we will call this to start the GitHub Login process&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/auth/github&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// GitHub will call this URL&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/auth/github/callback&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;failureRedirect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Lets also add some debug information to our main menu route so we can indicate when the authentication has worked. Add this to the main &lt;code&gt;/&lt;/code&gt; route below our hacked HTML menu.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// dump the user for debugging&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;p&amp;gt;authenticated as user:&amp;lt;/p&amp;gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;pre&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Run the application and we should be able to login through GitHub and then get redirected back to main menu. The main menu page should also dump out your user information provided by GitHub. Lastly, the Logout route should also work correctly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://www.jokecamp.com/public/github-authorize-oauth.png&quot; titl&quot;Screenshot GitHub OAuth permissions&quot; style=&quot;width:400px; border:solid 1px #444;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.jokecamp.com/public/github-logged-in.png&quot; title=&quot;Screenshot Logged in with user data&quot; style=&quot;width:400px; border:solid 1px #444;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;protect&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;5) &lt;a href=&quot;#protect&quot;&gt;Protecting/Securing a custom route&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Now that we are able to login with OAuth how do we protect individual routes and require that the user be authenticated? To do this we will add a new middleware function called &lt;code&gt;ensureAuthenticated&lt;/code&gt;. The middleware will intercept the request and ensure that the request has been authenticated with passport. The key line in this function is &lt;code&gt;req.isAuthenticated()&lt;/code&gt;. This method is poorly documented and this &lt;a href=&quot;http://stackoverflow.com/a/14301657/215502&quot;&gt;SO answer&lt;/a&gt; was my very helpful. If the authenticated check fails we will redirect to the main menu route.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We will create a new stub route and call it &lt;code&gt;protected&lt;/code&gt;. Copy below code that includes the route and &lt;code&gt;ensureAuthenticated&lt;/code&gt; middleware.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Simple middleware to ensure user is authenticated.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Use this middleware on any resource that needs to be protected.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// If the request is authenticated (typically via a persistent login session),&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the request will proceed.  Otherwise, the user will be redirected to the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// login page.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ensureAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// req.user is available for use here&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// denied. redirect to login&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/protected&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ensureAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;access granted. secure stuff happens here&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Run the application again and login then visit &lt;a href=&quot;http://localhost:30000/protected&quot;&gt;http://localhost:30000/protected&lt;/a&gt;. Try again after you logout. If you have errors compare your code to the entire &lt;a href=&quot;https://gist.github.com/jokecamp/65604d50227b8ea8e0d3&quot;&gt;tutorial source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;pitfalls&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;#pitfalls&quot;&gt;Common Pitfalls and Gotchas&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;A list of errors I encountered myself that might be roadblocks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Getting the &lt;code&gt;FacebookTokenError: This authorization code has been used.&lt;/code&gt; error on login.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many times is the &lt;code&gt;passport.deserializeUser&lt;/code&gt; function called?&lt;/li&gt;
&lt;li&gt;I was getting this error when I incorrectly had the &lt;code&gt;passport.authenticate(&amp;#39;github&amp;#39;)&lt;/code&gt; middleware on a route I wanted to protect after the OAuth workflow. This was creating the OAuth workflow to execute again after authentication. Only use the &lt;code&gt;passport.authenticate&lt;/code&gt; middleware on the two OAuth methods per provider. If you have a similar issue keep the Chrome Network console open and watch the requests.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;req.isAuthenticated()&lt;/code&gt; method is not documented very well in passport. You can find the &lt;code&gt;ensureAuthenticated&lt;/code&gt; middleware reference in the official passport example apps. For more reading see the article &lt;a href=&quot;https://www.learnallthenodes.com/episodes/23-authorization-with-passport-part-1-ensuring-theyre-logged-in&quot;&gt;Authorization with Passport (Part 1: Ensuring they&amp;#39;re logged in)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Getting the &lt;code&gt;Error: Failed to serialize user into session&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are missing the two methods &lt;code&gt;passport.deserializeUser&lt;/code&gt; and &lt;code&gt;passport.serializeUser&lt;/code&gt;. These are required for session use and authentication. Check for open source examples on GitHub to see how people implement this methods.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Problems with &lt;a href=&quot;https://github.com/jaredhanson/passport-local&quot;&gt;passport-local strategy&lt;/a&gt; (user and password form)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Outside the scope of this tutorial but make sure you are using the &lt;code&gt;body-parser&lt;/code&gt; package to &lt;code&gt;POST&lt;/code&gt; the login form.&lt;/li&gt;
&lt;li&gt;Make sure your form field names match the expected names in passport. If they do not match you will need to configure passport to know what field names to expect on a POST.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Resources&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/jokecamp/65604d50227b8ea8e0d3&quot;&gt;View/Download the source code for this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaredhanson/passport-github&quot;&gt;passport-github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://passportjs.org/&quot;&gt;passport.js&lt;/a&gt; - and source at &lt;a href=&quot;https://github.com/jaredhanson/passport&quot;&gt;github.com/jaredhanson/passport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.learnallthenodes.com/episodes/23-authorization-with-passport-part-1-ensuring-theyre-logged-in&quot;&gt;Authorization with Passport (Part 1: Ensuring they&amp;#39;re logged in)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/a/14301657/215502&quot;&gt;Express, passport. Where is the documentation for “ensureAuthentication”, “isAuthenticated”?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sun, 18 Oct 2015 00:00:00 -0600</pubDate>
				<link>http://www.jokecamp.com/tutorial-passportjs-authentication-in-nodejs</link>
				<guid isPermaLink="true">http://www.jokecamp.com/tutorial-passportjs-authentication-in-nodejs</guid>
			</item>
		
			<item>
				<title>Off The Grid</title>
				<description>&lt;p&gt;People who are developers living partially off-the-grid or a nomad lifestyle.&lt;/p&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Comments https://news.ycombinator.com/item?id=10375426&lt;/li&gt;
&lt;li&gt;http://motherboard.vice.com/read/off-the-grid-but-still-online&lt;/li&gt;
&lt;li&gt;Joey http://joeyh.name/&lt;/li&gt;
&lt;li&gt;http://www.watsonswander.com/&lt;/li&gt;
&lt;li&gt;http://theroadchoseme.com/&lt;/li&gt;
&lt;li&gt;http://www.vanvagabond.com/category/van-living/&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Coverage app for cell network coverage&lt;/li&gt;
&lt;li&gt;find Gigabyte internet connections
-- Google Fiber https://fiber.google.com/newcities/&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 13 Oct 2015 18:23:36 -0600</pubDate>
				<link>http://www.jokecamp.com/blog/off-the-grid</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/off-the-grid</guid>
			</item>
		
			<item>
				<title>Seen Security Flaws</title>
				<description>&lt;p&gt;A Growing list of security flaws found in the wild&lt;/p&gt;

&lt;p&gt;7/27/25&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t publish your .git file
http://www.jamiembrown.com/blog/one-in-every-600-websites-has-git-exposed/
https://news.ycombinator.com/item?id=9952356
Use a public folder instead of root.&lt;/p&gt;

&lt;p&gt;Steam accepted blank recovery codes for password resets
http://masterherald.com/steam-hit-by-major-security-breach-many-accounts-hacked/23239/
https://news.ycombinator.com/item?id=9953071
Related: Timing Attacks http://codahale.com/a-lesson-in-timing-attacks/&lt;/p&gt;

&lt;p&gt;Major Flaw In Android Phones Would Let Hackers In With Just A Text
http://www.npr.org/sections/alltechconsidered/2015/07/27/426613020/major-flaw-in-android-phones-would-let-hackers-in-with-just-a-text&lt;/p&gt;

&lt;p&gt;https://www.pagerduty.com/blog/july-2015-security-announcement/&lt;/p&gt;

&lt;p&gt;https://twitter.com/peterjmsimons/status/625021993897861124&lt;/p&gt;
</description>
				<pubDate>Thu, 30 Jul 2015 18:31:24 -0600</pubDate>
				<link>http://www.jokecamp.com/blog/seen-security-flaws</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/seen-security-flaws</guid>
			</item>
		
			<item>
				<title>Manu Data</title>
				<description>&lt;p&gt;http://schoolofdata.org/handbook/recipes/liberating-html-tables/&lt;/p&gt;

&lt;p&gt;https://docs.google.com/spreadsheets/d/1&lt;em&gt;Dd26yTuB0owpXtOBEKEwS09i0FQTuy&lt;/em&gt;IV-acmuriNw/edit#gid=0&lt;/p&gt;
</description>
				<pubDate>Sat, 25 Jul 2015 09:05:56 -0600</pubDate>
				<link>http://www.jokecamp.com/blog/manu-data</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/manu-data</guid>
			</item>
		
			<item>
				<title>Useful AngularJS Filters</title>
				<description>&lt;p&gt;I wanted to share some of the common AngularJS filters that I find myself using in numerous projects.&lt;/p&gt;

&lt;h1&gt;Useful AngularJS Filters&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#combine&quot;&gt;Path Combine filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#boolmask&quot;&gt;Boolean Mask filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#camelcase&quot;&gt;Camel Case to Human Readable String filter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;combine&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Path Combine&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(function () {
  &amp;#39;use strict&amp;#39;;

  angular.module(&amp;#39;myapp&amp;#39;).filter(&amp;#39;filePathCombine&amp;#39;, [&amp;#39;$filter&amp;#39;, filePathCombine]);

  /*
    Works like C# Path.Combine()
    Example usage: example.com
    Outputs: example.com\test.html
  */
  function filePathCombine() {

    return function (path1, path2) {

      if (!path1) return path2;

      if (path1.indexOf(&amp;#39;\\&amp;#39;) == path1.length-1) {
        return path1 + path2;
      } else {
        return path1 + &amp;#39;\\&amp;#39; + path2;
      }
    };
  }

})();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name=&quot;boolmask&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Bool Mask Filter&lt;/h2&gt;

&lt;p&gt;A common task is masking a boolean value with replacement text. Often times I want to show &amp;quot;yes&amp;quot; or &amp;quot;no&amp;quot; instead of &amp;quot;true&amp;quot; and &amp;quot;false.&amp;quot;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;(function() {
  &amp;#39;use strict&amp;#39;;

  // Anything in maskTextForTrue will be displayed if bool is True

  angular.module(&amp;#39;myapp&amp;#39;).filter(&amp;#39;boolMask&amp;#39;, function() {
    return function(input, maskTextForTrue, maskTextForFalse) {
      if (input == null) {
        return &amp;quot;&amp;quot;;
      }

      if (input) return maskTextForTrue;

      return maskTextForFalse;
    };
  });

})();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name=&quot;camelcase&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Convert Camel Case to Human Readable String&lt;/h2&gt;

&lt;p&gt;A simple regular expression wrapper to convert a camel case string into a string with spaces created by &lt;a href=&quot;https://github.com/jdpedrie/angularjs-camelCase-to-human-filter&quot;&gt;jdpedrie&lt;/a&gt;.
For example, changes &lt;code&gt;myCamelCaseString&lt;/code&gt; into &lt;code&gt;My Camel Case String&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;#39;use strict&amp;#39;;

angular.module(&amp;#39;camelCaseToHuman&amp;#39;, []).filter(&amp;#39;camelCaseToHuman&amp;#39;, function() {
  return function(input) {
    return input.charAt(0).toUpperCase() + input.substr(1).replace(/[A-Z]/g, &amp;#39; $&amp;amp;&amp;#39;);
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;View code on github at &lt;a href=&quot;https://github.com/jdpedrie/angularjs-camelCase-to-human-filter/blob/20311cf9d8107bd1a16579d702e95c4cf3493aac/camelCaseToHuman.js&quot;&gt;jdpedrie/angularjs-camelCase-to-human-filter&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 26 Jan 2015 06:09:34 -0700</pubDate>
				<link>http://www.jokecamp.com/blog/useful-angularjs-filters</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/useful-angularjs-filters</guid>
			</item>
		
			<item>
				<title>What has AngularJS ever done for us?</title>
				<description>&lt;p&gt;Several developers and a project manager meet at a round table to discuss the codebase for an existing web application. Ninja Developer, a young, fast typing, vim using, hacker news reader reading guy kicks off the meeting.&lt;/p&gt;

&lt;p&gt;Ninja Dev: I think we need to rewrite the web application in X. We are too constrained with AngularJS and the learning curve is too steep for new developers. Not to mention AngularJS 2 is a complete rewrite. We will be supporting this code forever and not just us but our replacement will have to learn it and then our replacement&amp;#39;s replacement.&lt;/p&gt;

&lt;p&gt;Manager: And then your replacement&amp;#39;s replacement&amp;#39;s replacement.&lt;/p&gt;

&lt;p&gt;Ninja Dev: Exactly.&lt;/p&gt;

&lt;p&gt;Manager: And then our replacement&amp;#39;s replacement&amp;#39;s replacement&amp;#39;s replacement.&lt;/p&gt;

&lt;p&gt;Ninja Dev: Yeah. well all right. Don&amp;#39;t labour the point. And what does Angular ever given us in return?&lt;/p&gt;

&lt;p&gt;Developer: A single page application?&lt;/p&gt;

&lt;p&gt;Ninja Dev: What?&lt;/p&gt;

&lt;p&gt;Developer: A single page application.&lt;/p&gt;

&lt;p&gt;Ninja Dev: Oh well yeah. It did provide that but--&lt;/p&gt;

&lt;p&gt;Developer #3: And modular components.&lt;/p&gt;

&lt;p&gt;Developer: Oh, yeah, modular components. Remember what our old ASP web forms and jQuery code looked like?&lt;/p&gt;

&lt;p&gt;Ninja Dev: Yeah. All right. I&amp;#39;ll grant you that Angular provided two things: a single page application and modular components.&lt;/p&gt;

&lt;p&gt;Developer #4: And data binding.&lt;/p&gt;

&lt;p&gt;Ninja Dev: Well, yeah. Obviously the data binding. I mean, the data binding goes without saying, doesn&amp;#39;t it? But apart from the single page application, the modular components, and the data binding even though for large data sets--&lt;/p&gt;

&lt;p&gt;Developer: Dependency injection.&lt;/p&gt;

&lt;p&gt;Developer #2: Testable code.&lt;/p&gt;

&lt;p&gt;Developers: yeah...oh...yeah&lt;/p&gt;

&lt;p&gt;Developer #3: an MVC approach.&lt;/p&gt;

&lt;p&gt;[a lot of nodding and agreeing tones from the developers]&lt;/p&gt;

&lt;p&gt;Ninja Dev: All right. Fair enough.&lt;/p&gt;

&lt;p&gt;Developer #1: And dependency injection.&lt;/p&gt;

&lt;p&gt;Developers: Yeah...&lt;/p&gt;

&lt;p&gt;Developer #2: Yeah, that&amp;#39;s something we&amp;#39;d really miss form our Angular projects.&lt;/p&gt;

&lt;p&gt;Developer: Community support and adoption.&lt;/p&gt;

&lt;p&gt;Developer #3: And our javascript code is actually organized for once.&lt;/p&gt;

&lt;p&gt;Developer #2: Yeah, the opinionated framework did help provide order. Let&amp;#39;s face it. We need an opinionated framework in this office.&lt;/p&gt;

&lt;p&gt;[healthy chuckling from the developers]&lt;/p&gt;

&lt;p&gt;Ninja Dev: All right, but apart from the single page app, the modular approach, data binding, dependency injection, community support, organization, and opinionated framework, what does AngularJS provide for us?&lt;/p&gt;

&lt;p&gt;Developer #1: We shipped the website.&lt;/p&gt;

&lt;p&gt;Ninja Dev: Shipped? Oh SHUT UP!&lt;/p&gt;

&lt;p&gt;Manager: What was this meeting for again?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;My apologies to Monty Python. A &lt;a href=&quot;http://www.westmont.edu/%7Efisk/articles/montypython.htm&quot;&gt;text script for the below video&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/9foi342LXQE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
				<pubDate>Mon, 26 Jan 2015 00:00:00 -0700</pubDate>
				<link>http://www.jokecamp.com/blog/what-has-angularjs-ever-done-for-us</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/what-has-angularjs-ever-done-for-us</guid>
			</item>
		
			<item>
				<title>Why is SVN merge not tracking merged revisions?</title>
				<description>&lt;p&gt;The most likely answer:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The URL to merge from is case-sensitive. If you merge from a URL with the wrong casing the merge will work for the files but the revision will not be recorded in the MergeInfo property.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This can be a frustrating problem because SVN and &lt;a href=&quot;http://tortoisesvn.net/&quot;&gt;TortiseSVN&lt;/a&gt; do not give any feedback/notification about the mis-matching urls during a &lt;a href=&quot;http://svnbook.red-bean.com/en/1.7/svn.branchmerge.basicmerging.html&quot;&gt;merge&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;How I figured it out&lt;/h2&gt;

&lt;p&gt;Recently, my svn client merge-tracking stopped working. I was performing merges with &lt;a href=&quot;http://tortoisesvn.net/&quot;&gt;TortiseSVN&lt;/a&gt; at the root level but the revision numbers where not being recorded in the MergeInfo Property. There were no error messages either.&lt;/p&gt;

&lt;p&gt;I then tried merging directly with svn from the command line but got the same result. No error messages either.&lt;/p&gt;

&lt;p&gt;It was not until I thought to try to do a merge from the command line with the &lt;code&gt;--record-only&lt;/code&gt; option. This was the only command that provided an actual error message:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;svn merge -c 16304 https://server/svn/project/trunk/ --record-only
svn: E200004: Merge from foreign repository is not compatible with mergeinfo modification
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once I had a meaningful error, I was able to track down this old forum conversation (argument) about &lt;a href=&quot;http://tigris-scm.10930.n7.nabble.com/Why-Merge-Tracking-is-disabled-td24815.html&quot;&gt;case sensitive urls and TortiseSVN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope this saves you some time.&lt;/p&gt;
</description>
				<pubDate>Thu, 06 Nov 2014 00:00:00 -0700</pubDate>
				<link>http://www.jokecamp.com/blog/why-is-svn-merge-not-tracking-merged-revisions</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/why-is-svn-merge-not-tracking-merged-revisions</guid>
			</item>
		
			<item>
				<title>Simple Examples of PowerShell&#39;s Invoke-RestMethod</title>
				<description>&lt;p&gt;The &lt;a href=&quot;http://technet.microsoft.com/en-us/library/hh849971.aspx&quot;&gt;documentation for Invoke-RestMethod&lt;/a&gt; is a long sea of text. Skip it. These simple examples should get your started with consuming a REST API with PowerShell. Just a quick note that &lt;code&gt;Invoke-RestMethod&lt;/code&gt; will parse the HTTP response for you and return a PowerShell object.&lt;/p&gt;

&lt;h2&gt;Simple GET example&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Invoke-RestMethod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://example.com/api/people&amp;#39;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# assuming the response was in this format { &amp;quot;items&amp;quot;: [] }&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# we can now extract the child people like this&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$people&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;GET with custom headers example&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;System.Collections.Generic.Dictionary[[String],[String]]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;X-DATE&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;9/29/2014&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;X-SIGNATURE&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;234j123l4kl23j41l23k4j&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;X-API-KEY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;testuser&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Invoke-RestMethod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://example.com/api/people/1&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Headers&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;PUT/POST example&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;joe&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lastname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;doe&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ConvertTo-Json&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Invoke-RestMethod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://example.com/api/people/1&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Put&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Body&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-ContentType&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;DELETE example&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Invoke-RestMethod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://example.com/api/people/1&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Delete&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Wed, 01 Oct 2014 00:00:00 -0600</pubDate>
				<link>http://www.jokecamp.com/blog/invoke-restmethod-powershell-examples</link>
				<guid isPermaLink="true">http://www.jokecamp.com/blog/invoke-restmethod-powershell-examples</guid>
			</item>
		
	</channel>
</rss>
